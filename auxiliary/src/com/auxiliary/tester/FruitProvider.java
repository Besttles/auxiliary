package com.auxiliary.tester;import java.lang.annotation.ElementType;import java.lang.annotation.Retention;import java.lang.annotation.RetentionPolicy;import java.lang.annotation.Target;import java.lang.reflect.Field;@Target(ElementType.FIELD)@Retention(RetentionPolicy.RUNTIME)public @interface FruitProvider {        int id() default 0;        String user() default "";        String address() default "";        }@Target(ElementType.FIELD)@Retention(RetentionPolicy.RUNTIME)@interface FruitColor {    enum Color{RED,YELLOW,WHITE}    Color fruitColor() default Color.RED;}@Target(ElementType.FIELD)@Retention(RetentionPolicy.RUNTIME)@interface FruitName {    String value() default "";}class Apple {    @FruitName(value="FuShi Apple")    private String fruitName;    @FruitColor(fruitColor= FruitColor.Color.RED)    private String fruitColor;    @FruitProvider(id=1,user="Tom",address="China")    private FruitProvider provider;}class Test {    public static void getFruitInfo(String clas){        try {            Class<?> cls = Class.forName(clas);            Field[] fields = cls.getDeclaredFields();            for (Field field : fields) {                if(field.isAnnotationPresent(FruitName.class)==true){                    FruitName name = field.getAnnotation(FruitName.class);                    System.out.println("Fruit Name:"+name.value());                }                if(field.isAnnotationPresent(FruitColor.class)){                    FruitColor color = field.getAnnotation(FruitColor.class);                    System.out.println("Fruit Color:"+color.fruitColor());                }                if(field.isAnnotationPresent(FruitProvider.class)){                    FruitProvider Provider = field.getAnnotation(FruitProvider.class);                    System.out.println("Fruit FruitProvider: ProviderID:"+Provider.id()+" Provider:"+Provider.user() +" ProviderAddress:"+Provider.address());                }            }        } catch (ClassNotFoundException e) {            e.printStackTrace();        }    }    public static void main(String[] args) {        getFruitInfo("com.example.demo.tester.Apple");    }}