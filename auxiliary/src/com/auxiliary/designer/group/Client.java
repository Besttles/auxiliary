package com.auxiliary.designer.group;import java.util.List;public class Client {    public static void main(String[] args) {        Brunch ceo = compositive();        System.out.println(ceo.getInfo());        IteratorTree(ceo);    }    private static void IteratorTree(Brunch ceo) {        List<Node> ul = ceo.getUL();        for (Node u: ul) {            if (u instanceof Leaf){                System.out.println(u.getInfo());            }else{                System.out.println(u.getInfo());                IteratorTree((Brunch) u);            }        }    }    private static Brunch compositive() {        Brunch ceo = new Brunch("ceo", 100);        Brunch dev = new Brunch("dev", 90);        Brunch tes = new Brunch("tes", 90);        Brunch pag = new Brunch("pag", 90);        ceo.addUnderling(dev , tes , pag);        Leaf a = new Leaf("a" , 80);        Leaf b = new Leaf("b" , 80);        Leaf c = new Leaf("c" , 80);        Leaf d = new Leaf("d" , 80);        Leaf e = new Leaf("e" , 80);        Leaf f = new Leaf("f" , 80);        dev.addUnderling(a , b , c);        tes.addUnderling(d , e);        pag.addUnderling(f);        return ceo;    }}